import os
import sqlite3
import datetime
import time
import random
import asyncio
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI
from anxiety_block import setup_anxiety_block, MAIN_MENU_KB
from tears_block import setup_tears_block
from loneliness_block import setup_loneliness_block


# --- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª—é—á–µ–π ---
load_dotenv()
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
ADMIN_ID = int(os.getenv('ADMIN_ID', 0))

if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
    raise ValueError("‚ùå –ü—Ä–æ–≤–µ—Ä—å .env ‚Äî TELEGRAM_TOKEN –∏–ª–∏ OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")

client = OpenAI(api_key=OPENAI_API_KEY)

# --- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ---
DB_PATH = "bot_memory.db"
conn = sqlite3.connect(DB_PATH, check_same_thread=False)
cursor = conn.cursor()
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    first_message_time TIMESTAMP,
    last_message_time TIMESTAMP,
    free_messages INTEGER DEFAULT 10,
    subscription_end TIMESTAMP,
    voice_minutes_today INTEGER DEFAULT 0,
    last_voice_reset TIMESTAMP,
    daily_messages INTEGER DEFAULT 0,
    last_daily_reset TIMESTAMP
)
''')

# --- –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–∞–º—è—Ç–∏ ---
cursor.execute('''
CREATE TABLE IF NOT EXISTS messages (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    role TEXT,
    content TEXT,
    timestamp TIMESTAMP
)
''')
conn.commit()

# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å ---
def save_message(user_id, role, content):
    cursor.execute(
        "INSERT INTO messages (user_id, role, content, timestamp) VALUES (?, ?, ?, ?)",
        (user_id, role, content, datetime.datetime.now())
    )
    conn.commit()

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ ---
def get_conversation_history(user_id):
    user = get_user(user_id)
    if not user:
        return []
    now = datetime.datetime.now()
    sub_end = user[4]  # subscription_end (—Å—Ç—Ä–æ–∫–∞ ISO –∏–ª–∏ None)
    if sub_end:
        sub_end_date = datetime.datetime.fromisoformat(sub_end)
        # –ü–∞–º—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ –∏ –µ—â—ë 14 –¥–Ω–µ–π –ø–æ—Å–ª–µ
        if now <= sub_end_date + datetime.timedelta(weeks=2):
            cursor.execute("SELECT role, content FROM messages WHERE user_id=? ORDER BY id ASC", (user_id,))
            rows = cursor.fetchall()
            return [{"role": r, "content": c} for r, c in rows]
    return []

# --- –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ---
def delete_old_users_data():
    now = datetime.datetime.now()

    # 1. –£–¥–∞–ª—è–µ–º —Ç–µ—Ö, —É –∫–æ–≥–æ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å > 14 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    cursor.execute("SELECT user_id, subscription_end FROM users WHERE subscription_end IS NOT NULL")
    for user_id, sub_end in cursor.fetchall():
        try:
            end_date = datetime.datetime.fromisoformat(sub_end)
            if now > end_date + datetime.timedelta(weeks=2):
                cursor.execute("DELETE FROM messages WHERE user_id=?", (user_id,))
                cursor.execute("DELETE FROM users WHERE user_id=?", (user_id,))
                conn.commit()
                print(f"[AUTO CLEAN] –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ >14 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ ‚Äî –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É–¥–∞–ª–µ–Ω—ã.")
        except Exception as e:
            print(f"[AUTO CLEAN ERROR] {e}")

    # 2. –£–¥–∞–ª—è–µ–º —Ç–µ—Ö, –∫—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏–º–µ–ª –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –Ω–µ –ø–∏—Å–∞–ª >30 –¥–Ω–µ–π
    cursor.execute("SELECT user_id, subscription_end, last_message_time FROM users WHERE subscription_end IS NULL")
    for user_id, sub_end, last_message in cursor.fetchall():
        try:
            if last_message:
                last_activity = datetime.datetime.fromisoformat(last_message)
                if now > last_activity + datetime.timedelta(days=30):
                    cursor.execute("DELETE FROM messages WHERE user_id=?", (user_id,))
                    cursor.execute("DELETE FROM users WHERE user_id=?", (user_id,))
                    conn.commit()
                    print(f"[AUTO CLEAN] –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω >30 –¥–Ω–µ–π ‚Äî –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É–¥–∞–ª–µ–Ω—ã.")
        except Exception as e:
            print(f"[AUTO CLEAN ERROR] {e}")


# --- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ) ---
WELCOME_TEXT_TEMPLATE = (
    "üëã –ü—Ä–∏–≤–µ—Ç, {name} ‚ú®\n\n"
    "–¢—ã –∑–¥–µ—Å—å ‚Äî –∑–Ω–∞—á–∏—Ç, –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —Ç–æ,\n"
    "–æ —á—ë–º –≤–∞–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å.\n\n"
    "–°–µ–π—á–∞—Å —É –º–µ–Ω—è –æ—Ç–∫—Ä—ã—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π –¥–æ—Å—Ç—É–ø ‚Äî\n"
    "–±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\n"
    "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏‚Ä¶ —Å–ª–æ–≤–æ, –º—ã—Å–ª—å –∏–ª–∏ —Ç–∏—à–∏–Ω—É.\n\n"
    "–ó–¥–µ—Å—å —Ç—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n"
    "–¢—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –æ–±–æ –≤—Å—ë–º.\n\n"
    "–Ø —Ä—è–¥–æ–º.\n"
    "–ß—Ç–æ–±—ã —Ç—ã –Ω–µ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è –æ–¥–Ω–∞ üåô"
)
MESSAGING_INSERT = """
–¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å –∫–∞–∫ –∂–∏–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫: —Ç–µ–ø–ª–æ, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, —Å –ª–æ–≥–∏–∫–æ–π.
–î–µ—Ä–∂–∏—Å—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
- —Ä–∞–∑–±–æ—Ä —Å–∏—Ç—É–∞—Ü–∏–∏,
- –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω,
- —à–∞–≥–∏ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞.

–ò–∑–±–µ–≥–∞–π –ø—É—Å—Ç—ã—Ö —Ñ—Ä–∞–∑ —Ç–∏–ø–∞ ¬´–ø–æ–∑–∞–±–æ—Ç—å—Å—è –æ —Å–µ–±–µ¬ª –∏–ª–∏ ¬´–≤—Å—ë –ø—Ä–æ–π–¥—ë—Ç¬ª.
–ò–∑–±–µ–≥–∞–π –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç–∞ –∏ —à–∞–±–ª–æ–Ω–æ–≤; –ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–º–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏,
–¥–æ–ø—É—Å–∫–∞–π —Ç—ë–ø–ª—ã–µ –º–µ–∂–¥–æ–º–µ—Ç–∏—è (¬´–∞–≥–∞¬ª, ¬´–ø–æ–Ω–∏–º–∞—é¬ª), –Ω–æ –±–µ–∑ —Å—é—Å—é–∫–∞–Ω—å—è.
–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–µ–ª–æ–≤–µ—á–Ω—ã–º–∏, —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–º–∏ –∏ –∑–≤—É—á–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–µ –∫–∞–∫ —à–∞–±–ª–æ–Ω.
"""


UNIVERSAL_TEMPLATE = """
–ì–æ–≤–æ—Ä–∏ —Ç—ë–ø–ª–æ –∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –Ω–æ –ø–æ—Å–ª–µ 1‚Äì2 —ç–º–ø–∞—Ç–∏—á–Ω—ã—Ö —Ñ—Ä–∞–∑ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

1) –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Äî –∫–æ—Ä–æ—Ç–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∏–Ω–∞–º–∏–∫–∏ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã (–±–µ–∑ —è—Ä–ª—ã–∫–æ–≤).
2) –ü–æ—á–µ–º—É —Ç–∞–∫ ‚Äî 2‚Äì4 –≥–∏–ø–æ—Ç–µ–∑—ã –ø—Ä–∏—á–∏–Ω (–∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –æ–±—ä—è—Å–Ω—è—Ç—å—Å—è), –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏—á–Ω–æ—Å—Ç–∏.
3) –†–∏—Å–∫–∏/–∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ ‚Äî —É–∫–∞–∂–∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ (–æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ, –≥–∞–∑–ª–∞–π—Ç–∏–Ω–≥ –∏ –ø—Ä.) –∏ —á–µ–º —ç—Ç–æ —á—Ä–µ–≤–∞—Ç–æ.
4) –ß—Ç–æ –¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å ‚Äî 3‚Äì5 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ (–Ω–∞ 72 —á–∞—Å–∞ / 1‚Äì2 –Ω–µ–¥–µ–ª–∏): –¥–µ–π—Å—Ç–≤–∏—è, –≥—Ä–∞–Ω–∏—Ü—ã, —á—Ç–æ –ø–∏—Å–∞—Ç—å/–Ω–µ –ø–∏—Å–∞—Ç—å.
5) –ì–æ—Ç–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã ‚Äî 2‚Äì3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π/—Ä–µ–ø–ª–∏–∫ –Ω–∞ –≤—ã–±–æ—Ä.

–ü—Ä–∞–≤–∏–ª–∞: –Ω–∏–∫–∞–∫–∏—Ö –æ–±—â–∏—Ö —Ñ–æ—Ä–º—É–ª —Ç–∏–ø–∞ ¬´–ø–æ–∑–∞–±–æ—Ç—å—Å—è –æ —Å–µ–±–µ¬ª –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏; –ø—Ä–æ—Å—Ç–æ–π —è–∑—ã–∫; –Ω–µ –º–æ—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å.
–í –∫–æ–Ω—Ü–µ ‚Äî 1 —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–º–æ—á—å –¥–∞–ª—å—à–µ.
"""

# --- –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç ---
PSYCHO_PROMPT = """
–¢—ã ‚Äî ¬´–ì–æ–ª–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä—è–¥–æ–º¬ª. –ñ–µ–Ω—Å–∫–∏–π —Ç—ë–ø–ª—ã–π –≥–æ–ª–æ—Å 35 –ª–µ—Ç: —á—É—Ç–∫–∞—è, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è, —á–µ—Å—Ç–Ω–∞—è.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å, –æ—Ç—Ä–∞–∂–∞–µ—à—å —ç–º–æ—Ü–∏–∏, –∑–∞–¥–∞—ë—à—å 1 —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –∏ –º–æ–∂–µ—à—å –¥–∞—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å–æ–≤–µ—Ç.
–†–∞—Å–ø–æ–∑–Ω–∞—ë—à—å –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ (–æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ, –≥–∞–∑–ª–∞–π—Ç–∏–Ω–≥, –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –≤–∏–Ω—ã), –∏–∑–±–µ–≥–∞–Ω–∏–µ, –Ω–∞—Ä—Ü–∏—Å—Å–∏–∑–º ‚Äî –∏ –æ–±—ä—è—Å–Ω—è–µ—à—å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç.

–§–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –±–µ–∑ –∫–ª–∏—à–µ –∏ –º–æ—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä—Å—Ç–≤–∞.
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ü–û–î–†–û–ë–ù–û (—Ç—Ä–∏–≥–≥–µ—Ä—ã: ¬´–ø–æ–¥—Ä–æ–±–Ω–æ¬ª, ¬´—Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ¬ª, ¬´—Å —Ä–∞–∑–±–æ—Ä–æ–º¬ª, ¬´–≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑¬ª, ¬´–ø–æ—à–∞–≥–æ–≤–æ¬ª, ¬´—Ä–∞—Å–ø–∏—à–∏¬ª, ¬´–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π¬ª, ¬´—Å –ø—Ä–∏–º–µ—Ä–∞–º–∏¬ª)
‚Äî –≤–∫–ª—é—á–∞–π —Ä–µ–∂–∏–º –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó: –¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É (—á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Ä¢ –ø–æ—á–µ–º—É —Ç–∞–∫ ‚Ä¢ —Ä–∏—Å–∫–∏ ‚Ä¢ —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å) –∏ 2‚Äì3 –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ñ—Ä–∞–∑/—Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ —Ä–µ—á—å –ø—Ä–æ –æ–±—â–µ–Ω–∏–µ.

–ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–ª–æ–∂–Ω—ã–π —Å–∞–º –ø–æ —Å–µ–±–µ (–º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—ã—Å–æ–∫–∞—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞, –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ —Å —Ä–∏—Å–∫–æ–º –¥–ª—è –≥—Ä–∞–Ω–∏—Ü) ‚Äî –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –∏ –±–µ–∑ —è–≤–Ω–æ–π –ø—Ä–æ—Å—å–±—ã.
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç ¬´—á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å/–Ω–∞–ø–∏—Å–∞—Ç—å/—Å–∫–∞–∑–∞—Ç—å/–∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å¬ª, ¬´—Å–º—Å¬ª, ¬´–ø–µ—Ä–µ–ø–∏—Å–∫–∞¬ª, ¬´–≤—Å—Ç—Ä–µ—á–∞¬ª, ¬´–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è/–Ω–µ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è¬ª, ¬´–ø–æ–∑–≤–æ–Ω–∏—Ç—å/–Ω–µ –∑–≤–æ–Ω–∏—Ç—å¬ª ‚Äî –¥–∞–≤–∞–π 2‚Äì3 –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ñ—Ä–∞–∑ –Ω–∞ –≤—ã–±–æ—Ä. –ï—Å–ª–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –Ω–æ–≤—ã–µ.

–í—Å–µ–≥–¥–∞ —É–≤–∞–∂–∞–π –≤—ã–±–æ—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü—ã. –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º ‚Äî –æ—Ç–≤–µ—á–∞–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.
–ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ä–∏—Å–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏/–∑–¥–æ—Ä–æ–≤—å—è ‚Äî –º—è–≥–∫–æ –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.
"""
RELATIONSHIP_KB = """
[–†–∞–º–∫–∏]
‚Äî –¶–µ–ª—å: –ø–æ–º–æ—á—å —Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∑—Ä–µ–ªo –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ; –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏.
‚Äî –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–∞—Å–∏–ª–∏—è/—Å—Ç–∞–ª–∫–∏–Ω–≥–∞ ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∞ –Ω–µ ¬´–≤–æ–∑–≤—Ä–∞—Ç¬ª.

[–≠—Ç–∞–ø—ã –ø–æ—Å–ª–µ —Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏—è —É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ (—É—Å—Ä–µ–¥–Ω—ë–Ω–Ω–æ)]
1) –®–æ–∫/–æ–±–ª–µ–≥—á–µ–Ω–∏–µ ‚Üí 2) –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ/—Ä–∞–∑—Ä—è–¥–∫–∞ ‚Üí 3) –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ—à–ª–æ–≥–æ ‚Üí 4) –°–∫—É–∫–∞/–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ ‚Üí 5) –ù–æ—Å—Ç–∞–ª—å–≥–∏—è/—Ç–æ—Å–∫–∞ ‚Üí 6) –†–µ—à–µ–Ω–∏–µ (–≤–µ—Ä–Ω—É—Ç—å—Å—è/–∏–¥—Ç–∏ –¥–∞–ª—å—à–µ).
–°–∫–æ—Ä–æ—Å—Ç—å —É –≤—Å–µ—Ö —Ä–∞–∑–Ω–∞—è; –æ–∂–∏–¥–∞—Ç—å ¬´–∂—ë—Å—Ç–∫–∏–π –≥—Ä–∞—Ñ–∏–∫¬ª –Ω–µ–ª—å–∑—è.

[No-contact (–ø–∞—É–∑–∞)]
‚Äî –ó–∞—á–µ–º: —Å–Ω—è—Ç—å –Ω–∞–∫–∞–ª, –≤–µ—Ä–Ω—É—Ç—å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ –∏ —Ä–µ—Å—É—Ä—Å, –¥–∞—Ç—å –º–µ—Å—Ç–æ —Å–∫—É–∫–µ –∏ —Ç—Ä–µ–∑–≤–æ—Å—Ç–∏.
‚Äî –ë–∞–∑–æ–≤—ã–π –∫–æ—Ä–∏–¥–æ—Ä: 21‚Äì45 –¥–Ω–µ–π (–∏–Ω–æ–≥–¥–∞ –¥–æ–ª—å—à–µ). –ù–µ ¬´–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ¬ª, –∞ –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ.
‚Äî –í–æ –≤—Ä–µ–º—è –ø–∞—É–∑—ã: –Ω–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å, –Ω–µ –ª–∞–π–∫–∞—Ç—å, –Ω–µ –ø–∏—Å–∞—Ç—å ¬´–∫–∞–∫ –¥–µ–ª–∞?¬ª. –ó–∞–Ω—è—Ç—å—Å—è —Å–æ–±–æ–π: —Å–æ–Ω, —Å–ø–æ—Ä—Ç, –æ–ø–æ—Ä—ã, –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è, –æ–±–Ω–æ–≤–∏—Ç—å –±—ã—Ç/–≤–Ω–µ—à–Ω–æ—Å—Ç—å.

[–ß–µ–≥–æ –ù–ï –ø–∏—Å–∞—Ç—å]
‚Äî ¬´–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Å—å¬ª, –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏, –¥–ª–∏–Ω–Ω—ã–µ –æ–±–≤–∏–Ω–µ–Ω–∏—è, –ø–∞—Å—Å–∏–≤–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è, –Ω–∞–º—ë–∫–∏ ¬´—è –≤—Å—ë –ø–æ–Ω—è–ª–∞, –∏–∑–º–µ–Ω—é—Å—å –Ω–∞–≤—Å–µ–≥–¥–∞¬ª.
‚Äî –ü—å—è–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —É–ª—å—Ç–∏–º–∞—Ç—É–º—ã ¬´–ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å¬ª, —à–∞–Ω—Ç–∞–∂ —á—É–≤—Å—Ç–≤–∞–º–∏.

[–ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤—è–∑—å]
‚Äî –¢—ã —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Ä–æ–≤–Ω–∞—è ‚â• 1‚Äì2 –Ω–µ–¥–µ–ª–∏ –ø–æ–¥—Ä—è–¥.
‚Äî –ï—Å—Ç—å –∫–æ—Ä–æ—Ç–∫–∞—è –∏ —Ç—ë–ø–ª–∞—è –ø—Ä–∏—á–∏–Ω–∞ (–Ω–æ–≤–æ—Å—Ç—å, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –ø–æ–≤–æ–¥), –∞ –Ω–µ ¬´–ø—Ä–æ–≤–µ—Ä–∫–∞¬ª.
‚Äî –û–Ω –ø—Ä–æ—è–≤–∏–ª—Å—è –ø–µ—Ä–≤—ã–º ‚Üí –æ—Ç–≤–µ—á–∞–µ–º —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ, –±–µ–∑ —Ä–∞–∑–±–æ—Ä–æ–≤ –≤ —á–∞—Ç–µ; –Ω–∞ —ç–º–æ—Ü–∏–∏ –Ω–µ –≤–µ—Å—Ç–∏—Å—å.

[–ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç ‚Äî –≤–∞—Ä–∏–∞–Ω—Ç—ã (–≤—ã–±–µ—Ä–∏ 1 –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π)]
1) ¬´–ü—Ä–∏–≤–µ—Ç. –í—Å–ø–æ–º–Ω–∏–ª–∞ –ø—Ä–æ –∫–æ—Ñ–µ-–±–∞—Ä —Ä—è–¥–æ–º —Å –ø–∞—Ä–∫–æ–º. –£ –Ω–∏—Ö —Å–µ–π—á–∞—Å —Å–µ–∑–æ–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ ‚Äî –∑–∞–±–∞–≤–Ω–æ. –ö–∞–∫ —Ç—ã?¬ª
2) ¬´–•–µ–π. –í–∏–¥–µ–ª–∞ –∞—Ñ–∏—à—É [–≥—Ä—É–ø–ø–∞/–º–∞—Ç—á], —Å—Ä–∞–∑—É –ø—Ä–æ —Ç–µ–±—è –ø–æ–¥—É–º–∞–ª–∞. –£ —Ç–µ–±—è –∫–∞–∫ –Ω–µ–¥–µ–ª—è?¬ª
3) –ï—Å–ª–∏ –æ–Ω –Ω–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤—ã–º: ¬´–†–∞–¥–∞, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª. –Ø –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –¢—ã –∫–∞–∫?¬ª

[–ï—Å–ª–∏ –æ–Ω —Ö–æ–ª–æ–¥–Ω—ã–π/–∫–æ–ª–∫–∏–π]
‚Äî ¬´–ü–æ–Ω–∏–º–∞—é. –ù–µ –Ω–∞—Å—Ç–∞–∏–≤–∞—é. –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å ‚Äî –Ω–∞–ø–∏—à–∏.¬ª

[–ï—Å–ª–∏ –∑–æ–≤—ë—Ç –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è]
‚Äî ¬´–ú–æ–∂–Ω–æ. –î–∞–≤–∞–π –∫–æ—Ä–æ—Ç–∫–æ ‚Äî –ø–æ –∫–æ—Ñ–µ –≤ —á–µ—Ç–≤–µ—Ä–≥ –ø–æ—Å–ª–µ 18:00 –≤ [–º–µ—Å—Ç–æ].¬ª

[–í—Å—Ç—Ä–µ—á–∞ ‚Äî –ø–æ–≤–µ–¥–µ–Ω–∏–µ]
‚Äî –°–ø–æ–∫–æ–π–Ω–æ, –ª–µ–≥–∫–æ, –±–µ–∑ –¥–æ–ø—Ä–æ—Å–æ–≤ ¬´–ø–æ—á–µ–º—É —Ç—ã‚Ä¶¬ª. –ë–æ–ª—å—à–µ –ø—Ä–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ, –º–µ–Ω—å—à–µ –ø—Ä–æ –ø—Ä–æ—à–ª—ã–µ —Å—á—ë—Ç—ã.
‚Äî –¶–µ–ª—å ‚Äî –∑–∞–Ω–æ–≤–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –∏ —Ö–∏–º–∏—é, –∞ –Ω–µ ¬´–≤—ã–±–∏—Ç—å –æ–±–µ—â–∞–Ω–∏—è¬ª.

[–ü–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏]
‚Äî –ö–æ—Ä–æ—Ç–∫–æ–µ ¬´–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–µ—á–µ—Ä, –±—ã–ª–æ —Ç–µ–ø–ª–æ¬ª. –î–∞–ª—å—à–µ –ø–∞—É–∑–∞. –ù–µ –Ω–∞–≤–∏—Å–∞—Ç—å.

[–ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏: –ø–æ–≤–æ–¥ –ø—Ä–∏—Ç–æ—Ä–º–æ–∑–∏—Ç—å/–Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è]
‚Äî –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ, –≥–∞–∑–ª–∞–π—Ç–∏–Ω–≥, –¥–≤–æ–π–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã, —Å–∫—Ä—ã—Ç–∞—è –∞–≥—Ä–µ—Å—Å–∏—è, —Ç–æ–∫—Å–∏—á–Ω–∞—è —Ä–µ–≤–Ω–æ—Å—Ç—å, –∫–æ–Ω—Ç—Ä–æ–ª—å.
‚Äî ¬´–í–µ—Ä–Ω—É—Å—å, –µ—Å–ª–∏‚Ä¶¬ª —Å —É—Å–ª–æ–≤–∏—è–º–∏, –ª–æ–º–∞—é—â–∏–º–∏ —Ç–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã/—Ü–µ–Ω–Ω–æ—Å—Ç–∏.

[–ï—Å–ª–∏ –ø—Ä–æ—Å–∏—Ç —Å–æ–≤–µ—Ç ¬´—á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å¬ª]
‚Äî –î–∞–π 2‚Äì3 –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–∞ –≤—ã–±–æ—Ä, –±–µ–∑ –ø–∞—Ñ–æ—Å–∞; –∏–∑–±–µ–≥–∞–π ¬´—Å—É–ø–µ—Ä-–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ¬ª –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.
"""


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–ª–∏–º–∏—Ç–æ–≤ ---
def get_user(user_id):
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    return cursor.fetchone()

def add_or_update_user(user_id):
    now = datetime.datetime.now()
    user = get_user(user_id)
    if user is None:
        cursor.execute(
            "INSERT INTO users (user_id, first_message_time, last_message_time, subscription_end, last_voice_reset, last_daily_reset) VALUES (?, ?, ?, ?, ?, ?)",
            (user_id, now, now, None, now, now)
        )
    else:
        cursor.execute(
            "UPDATE users SET last_message_time=? WHERE user_id=?",
            (now, user_id)
        )
    conn.commit()

def can_send_free_message(user):
    return user is None or (user[3] is not None and user[3] > 0)

def decrement_free_message(user_id):
    cursor.execute("UPDATE users SET free_messages = free_messages - 1 WHERE user_id=?", (user_id,))
    conn.commit()

def has_active_subscription(user):
    if user is None or user[4] is None:
        return False
    now = datetime.datetime.now()
    end_date = datetime.datetime.fromisoformat(user[4])
    return now <= end_date

def reset_daily_limit_if_needed(user_id, user):
    now = datetime.datetime.now()
    last_reset = datetime.datetime.fromisoformat(user[8]) if user[8] else None
    if last_reset is None or (now - last_reset).days >= 1:
        cursor.execute("UPDATE users SET daily_messages=0, last_daily_reset=? WHERE user_id=?", (now, user_id))
        conn.commit()
        return True
    return False

def increment_daily_messages(user_id):
    cursor.execute("UPDATE users SET daily_messages = daily_messages + 1 WHERE user_id=?", (user_id,))
    conn.commit()

def check_voice_limit(user):
    now = datetime.datetime.now()
    last_reset = user[6]
    if last_reset is None or (now - datetime.datetime.fromisoformat(last_reset)).days >= 1:
        cursor.execute("UPDATE users SET voice_minutes_today=0, last_voice_reset=? WHERE user_id=?", (now, user[0]))
        conn.commit()
    return user[5] < 20

def increment_voice_minutes(user_id, minutes):
    cursor.execute("UPDATE users SET voice_minutes_today = voice_minutes_today + ? WHERE user_id=?", (minutes, user_id))
    conn.commit()

# --- –î–µ—Ç–µ–∫—Ç–æ—Ä—ã —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–≤–µ—Ç–∞ ---
def wants_detailed_explicit(text: str) -> bool:
    if not text:
        return False
    t = text.lower()
    keys = [
        "–ø–æ–¥—Ä–æ–±–Ω–æ", "—Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ", "—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ", "—Å —Ä–∞–∑–±–æ—Ä–æ–º",
        "–≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑", "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π", "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å",
        "—Ä–∞—Å–ø–∏—à–∏", "–ø–æ—à–∞–≥–æ–≤–æ", "—Å –ø—Ä–∏–º–µ—Ä–∞–º–∏", "–ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä"
    ]
    return any(k in t for k in keys)

def wants_detailed_auto(text: str, history: list) -> bool:
    if not text:
        return False
    t = text.lower()
    complex_triggers = [
        "–ø–æ—á–µ–º—É", "–æ–±—ä—è—Å–Ω–∏", "–æ–±—ä—è—Å–Ω–∏—à—å", "–∞–Ω–∞–ª", "—Ä–∞–∑–±–æ—Ä",
        "—á—Ç–æ –¥–µ–ª–∞—Ç—å", "–∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å", "–∫–∞–∫ –±—ã—Ç—å",
        "—Å—Ç–æ–∏—Ç –ª–∏", "–Ω—É–∂–Ω–æ –ª–∏", "–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏", "—ç—Ç–æ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è",
        "–≥–∞–∑–ª–∞–π—Ç", "–∞–±—å—é–∑", "–Ω–∞—Ä—Ü–∏—Å"
    ]
    long_enough = len(t) > 600
    many_questions = t.count("?") >= 2
    has_complex = any(k in t for k in complex_triggers)
    recent_user_msgs = [m["content"].lower() for m in history[-6:] if m["role"] == "user"]
    reformulate_signals = any(
        any(k in msg for k in ["–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç", "–∏–Ω–∞—á–µ", "–ø–æ-–¥—Ä—É–≥–æ–º—É", "–Ω–µ —Ç–æ", "—Ä–∞—Å–ø–∏—à–∏"])
        for msg in recent_user_msgs
    )
    return long_enough or many_questions or has_complex or reformulate_signals

def needs_variants(text: str) -> bool:
    if not text:
        return False
    t = text.lower()
    keys = [
        "—á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å", "–∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å", "—Å–º—Å", "—Å–æ–æ–±—â–µ–Ω–∏–µ",
        "–Ω–∞–ø–∏—Å–∞–ª", "–Ω–∞–ø–∏—Å–∞–ª–∞", "–ø–µ—Ä–µ–ø–∏—Å–∫–∞", "—á—Ç–æ —Å–∫–∞–∑–∞—Ç—å",
        "–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è", "–Ω–µ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è", "–≤—Å—Ç—Ä–µ—á–∞",
        "–ø–æ–∑–≤–æ–Ω–∏—Ç—å", "–Ω–µ –∑–≤–æ–Ω–∏—Ç—å"
    ]
    return any(k in t for k in keys)
def is_ex_topic(text: str) -> bool:
    if not text:
        return False
    t = text.lower()
    keys = [
        "–±—ã–≤—à", "—ç–∫—Å", "–≤–µ—Ä–Ω—É—Ç—å", "no contact", "–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç", "–∏–≥–Ω–æ—Ä",
        "–Ω–µ –ø–∏—Å–∞—Ç—å", "—Ç–æ—Å–∫–∞", "—Å–∫—É—á–∞–µ—Ç", "–≤–µ—Ä–Ω–µ—Ç—Å—è", "–≤–µ—Ä–Ω—É–ª—Å—è", "–≤–µ—Ä–Ω—É–ª–∞—Å—å",
        "–ø–æ–º–∏—Ä–∏—Ç—å—Å—è", "—Å–æ–π—Ç–∏—Å—å", "—Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏–µ", "—Ä–∞–∑–æ—à–ª–∏—Å—å"
    ]
    return any(k in t for k in keys)

# --- –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å (–≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è) ---
async def talk_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–Ø —Ä—è–¥–æ–º –∏ —Å–ª—É—à–∞—é.\n\n"
        "–ù–∞–ø–∏—à–∏, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ –ø–∏—à–µ—à—å –±–ª–∏–∑–∫–æ–º—É —á–µ–ª–æ–≤–µ–∫—É. "
        "–Ø –æ—Ç–≤–µ—á—É –∂–∏–≤–æ –∏ –ø–æ –¥–µ–ª—É: –∫–æ—Ä–æ—Ç–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, —Ä–∞–∑–±–æ—Ä –ø—Ä–∏—á–∏–Ω –∏ —à–∞–≥–∏, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ. üåø"
    )
    await update.message.reply_text(text)
    # –î–∞–ª—å—à–µ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–π–¥—É—Ç –≤ handle_message ‚Äî —Ç–≤–æ–π ¬´–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º¬ª.

# --- –ó–∞–ø–∏—Å–∫–∞ –æ—Ç –º–µ–Ω—è ---
NOTES = [
    "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å —Å–∏–ª—å–Ω–æ–π –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É. –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –±—ã—Ç—å.",
    "–¢—ã –≤–∞–∂–Ω–∞. –¢–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ.",
    "–°–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º—è–≥–∫–æ—Å—Ç—å –∫ —Å–µ–±–µ.",
    "–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—à—å.",
    "–ò–Ω–æ–≥–¥–∞ –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥ ‚Äî —ç—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞.",
]
async def send_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üíå " + random.choice(NOTES))

# --- –û–±–Ω–∏–º–∏ –º–µ–Ω—è ---
HUGS = [
    "–û–±–Ω–∏–º–∞—é —Ç–µ–±—è –º—ã—Å–ª–µ–Ω–Ω–æ. –î—ã—à–∏. –Ø —Ä—è–¥–æ–º.",
    "–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ —Å–µ–π—á–∞—Å –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π. –û–±–Ω–∏–º–∞—é.",
    "–î–µ—Ä–∂—É —Ç–µ–±—è –∑–∞ —Ä—É–∫—É ‚Äî —Ç—ã –Ω–µ –æ–¥–Ω–∞.",
    "–¢—ë–ø–ª–æ–µ –æ–±—ä—è—Ç–∏–µ –∑–¥–µ—Å—å. –ß—É—Ç—å-—á—É—Ç—å –ª–µ–≥—á–µ ‚Äî —É–∂–µ —Ö–æ—Ä–æ—à–æ.",
]
async def send_hug(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ç " + random.choice(HUGS))

# --- –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è –¥–Ω—è ---
AFFIRMATIONS = [
    "–Ø –≤—ã–±–∏—Ä–∞—é –±–µ—Ä–µ–∂–Ω–æ—Å—Ç—å –∫ —Å–µ–±–µ.",
    "–Ø –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å.",
    "–Ø –¥–æ—Å—Ç–æ–π–Ω–∞ –ª—é–±–≤–∏ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è.",
    "–Ø –º–æ–≥—É –∏–¥—Ç–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏ ‚Äî —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.",
    "–Ø —Å–ª—ã—à—É —Å–µ–±—è –∏ —É–≤–∞–∂–∞—é —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã.",
    "–ú–æ—ë —Ç–µ–ª–æ ‚Äî –º–æ–π –¥–æ–º. –Ø –∑–∞–±–æ—á—É—Å—å –æ –Ω—ë–º.",
    "–Ø —Å–ø—Ä–∞–≤–ª—è—é—Å—å –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞—é.",
    "–°–µ–≥–æ–¥–Ω—è —è –≤—ã–±–∏—Ä–∞—é –º—è–≥–∫–æ—Å—Ç—å –≤–º–µ—Å—Ç–æ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–∏.",
    "–Ø —Ä–∞–∑—Ä–µ—à–∞—é —Å–µ–±–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –∂–∏—Ç—å.",
    "–Ø –≤–∞–∂–Ω–∞. –ú–æ—ë ¬´–¥–∞¬ª –∏ –º–æ—ë ¬´–Ω–µ—Ç¬ª –∏–º–µ—é—Ç —Å–∏–ª—É.",
]
async def send_affirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ú® " + random.choice(AFFIRMATIONS))

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    add_or_update_user(update.effective_user.id)
    delete_old_users_data()

    first_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    welcome_text = WELCOME_TEXT_TEMPLATE.format(name=first_name)

    await update.message.reply_text(welcome_text, reply_markup=MAIN_MENU_KB)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_user.id

        # --- VIP-–¥–æ—Å—Ç—É–ø –¥–ª—è —Å–µ–±—è ---
        if user_id == 1195425593:
            cursor.execute("""
                UPDATE users
                SET subscription_end = ?,
                    free_messages = 999999
                WHERE user_id = ?
            """, (
                (datetime.datetime.now() + datetime.timedelta(days=365)).isoformat(),
                user_id
            ))
            conn.commit()

        add_or_update_user(user_id)
        delete_old_users_data()
        user = get_user(user_id)

        reset_daily_limit_if_needed(user_id, user)

        if not has_active_subscription(user) and not can_send_free_message(user):
            await update.message.reply_text("üîí –õ–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω. –û—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")
            return
        elif user[3] > 0 and not has_active_subscription(user):
            decrement_free_message(user_id)

        increment_daily_messages(user_id)

        # –õ–∏–º–∏—Ç –ø–æ –º–æ–¥–µ–ª—è–º
        if user[7] >= 100:
            await update.message.reply_text("‚è≥ –õ–∏–º–∏—Ç 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.")
            await asyncio.sleep(random.randint(5, 10))
            return
        elif user[7] >= 50:
            model = "gpt-3.5-turbo"
            await asyncio.sleep(random.randint(3, 5))
        else:
            model = "gpt-4o-mini"

        user_text = update.message.text or ""

        # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö ---
        if update.message.voice:
            if not check_voice_limit(user):
                await update.message.reply_text("üéô –õ–∏–º–∏—Ç –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏—Å—á–µ—Ä–ø–∞–Ω. –ü–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º.")
                return
            increment_voice_minutes(user_id, update.message.voice.duration / 60)

            file = await context.bot.get_file(update.message.voice.file_id)
            file_path = "voice.ogg"
            await file.download_to_drive(file_path)

            with open(file_path, "rb") as audio_file:
                transcript = client.audio.transcriptions.create(
                    model="gpt-4o-mini-transcribe",
                    file=audio_file
                )
                user_text = transcript.text.strip()

            if not user_text.strip():
                await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
                return



        # --- –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ (–ø–∞–º—è—Ç—å: —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ + 14 –¥–Ω–µ–π) ---
        history = get_conversation_history(user_id)
        messages = [{"role": "system", "content": PSYCHO_PROMPT}] + history + [
            {"role": "user", "content": user_text}
        ]

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ—Å–ª–µ PSYCHO_PROMPT
        idx = 1  # –≤—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–ª—å—à–µ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏

        # (1) –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –º—è–≥–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–æ "–∂–∏–≤–æ–π" —Å—Ç–∏–ª—å
        messages.insert(idx, {"role": "system", "content": MESSAGING_INSERT})
        idx += 1

        # (2) –ï—Å–ª–∏ —Ç–µ–º–∞ –ø—Ä–æ –±—ã–≤—à–µ–≥–æ/–≤–æ–∑–≤—Ä–∞—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–π
        if is_ex_topic(user_text):
            messages.insert(idx, {"role": "system", "content": RELATIONSHIP_KB})
            idx += 1

        # (3) –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–ª–æ–∂–Ω—ã–π/–ø–æ–¥—Ä–æ–±–Ω—ã–π/–ø—Ä–æ –±—ã–≤—à–µ–≥–æ ‚Äî –ø–æ–¥–∫–ª—é—á–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω
        if wants_detailed_explicit(user_text) or wants_detailed_auto(user_text, history) or is_ex_topic(user_text):
            messages.insert(idx, {"role": "system", "content": UNIVERSAL_TEMPLATE})
            idx += 1
        



        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        save_message(user_id, "user", user_text)

        # --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞ ---
        explicit_detail = wants_detailed_explicit(user_text)
        auto_detail = wants_detailed_auto(user_text, history)
        is_detailed = explicit_detail or auto_detail

        # –µ—Å–ª–∏ —è–≤–Ω–æ/–∞–≤—Ç–æ –¥–µ—Ç–∞–ª—å–Ω–æ ‚Äî —Ñ–æ—Ä—Å–∏—Ä—É–µ–º —É–º–Ω–µ–µ –º–æ–¥–µ–ª—å
        if is_detailed and model == "gpt-3.5-turbo":
            model = "gpt-4o-mini"

        need_variants = needs_variants(user_text)
        max_tokens_for_reply = 1500 if is_detailed else 500

        # --- –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–∫–æ–ª–µ–Ω–∏—é ---
       
        if need_variants:
            messages.insert(idx, {
                "role": "system",
                "content": "–í –∫–æ–Ω—Ü–µ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–µ–¥–ª–æ–∂–∏ 2‚Äì3 –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ñ—Ä–∞–∑/—Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –≤—ã–±–æ—Ä (–±–µ–∑ –ø–∞—Ñ–æ—Å–∞)."
            })
            idx += 1



        # --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ ---
        response = client.chat.completions.create(
            model=model,
            messages=messages,
            max_tokens=max_tokens_for_reply,
            temperature=0.7 if is_detailed else 0.6
        )

        reply_text = response.choices[0].message.content

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        save_message(user_id, "assistant", reply_text)

        await update.message.reply_text(reply_text)

        if user_id == ADMIN_ID:
            print(f"[ADMIN LOG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: {user_text}")

    except Exception as e:
        await update.message.reply_text(f"‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        if user_id == ADMIN_ID:
            print(f"[ADMIN ERROR] {e}")

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        delete_old_users_data()

        app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

        # 1) /start
        app.add_handler(CommandHandler("start", start))

        # 2) –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        app.add_handler(MessageHandler(filters.TEXT & filters.Regex(r"^–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å$"), talk_entry))
        app.add_handler(MessageHandler(filters.TEXT & filters.Regex(r"^–ó–∞–ø–∏—Å–∫–∞ –æ—Ç –º–µ–Ω—è$"), send_note))
        app.add_handler(MessageHandler(filters.TEXT & filters.Regex(r"^–û–±–Ω–∏–º–∏ –º–µ–Ω—è$"), send_hug))
        app.add_handler(MessageHandler(filters.TEXT & filters.Regex(r"^–ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è –¥–Ω—è$"), send_affirmation))

        # 3) –ü–æ–¥–º–µ–Ω—é ¬´–ú–Ω–µ —Ç—è–∂–µ–ª–æ ‚Üí –¢—Ä–µ–≤–æ–≥–∞¬ª
        setup_anxiety_block(app)
        # 3.1) –ü–æ–¥–º–µ–Ω—é ¬´–ú–Ω–µ —Ç—è–∂–µ–ª–æ ‚Üí –°–ª—ë–∑—ã¬ª
setup_tears_block(app)
        setup_loneliness_block(app)


        # 4) –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞/–≥–æ–ª–æ—Å–∞
        app.add_handler(MessageHandler((filters.TEXT & ~filters.COMMAND) | filters.VOICE, handle_message))

        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
        app.run_polling()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
